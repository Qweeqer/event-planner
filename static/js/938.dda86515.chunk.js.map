{"version":3,"file":"static/js/938.dda86515.chunk.js","mappings":"sRAgDA,MAvCA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,OAAOH,IAAI,IAajDI,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAAMC,GAAA,IAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAa,OAATJ,EAASD,EAATC,UAASE,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAErCpB,GAASqB,EAAAA,EAAAA,IAASP,IAAS,KAAD,EAChCQ,IAAAA,OAAgBC,QAAQnB,EAAKoB,uBAE7BR,IACAd,EAAS,KAAKgB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEdI,IAAAA,OAAgBI,QAAQtB,EAAKuB,qBAAqB,yBAAAT,EAAAU,OAAA,GAAAf,EAAA,kBAGrD,gBAXiBgB,EAAAC,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,KAchB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,SAAU3B,EACV4B,cA5BkB,CACpBC,MAAO,GACPC,YAAa,GACbC,KAAM,KACNC,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,SAAU,MAqBRC,QAASzC,EAAK0C,mBAGpB,E,oBCvBA,MAbA,WACE,IAAMC,GAAY1C,EAAAA,EAAAA,IAAY2C,EAAAA,IACxB5C,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,OAAOH,IAAI,IACrD,OACE6C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACElB,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CAAAD,SAAE/C,EAAKiD,kBAClBpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CAAAH,SAAE/C,EAAKmD,mBACbtB,EAAAA,EAAAA,KAACuB,EAAU,IACVT,IAAad,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,MAG3B,C","sources":["components/CreateForm/CreateForm.jsx","pages/CreatePage/CreatePage.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Notiflix from \"notiflix\";\n\n\nimport EventForm from \"../EventForm/EventForm\";\nimport { addEvent } from \"../../redux/events/eventsOperations\";\n\nfunction CreateForm() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const lang = useSelector((state) => state.events.lang);\n\n  const initialValues = {\n    title: \"\",\n    description: \"\",\n    date: null,\n    time: \"\",\n    location: \"\",\n    category: \"\",\n    picture: \"\",\n    priority: null,\n  };\n\nconst handleSubmit = async (values, { resetForm }) => {\n  try {\n    await dispatch(addEvent(values));\n    Notiflix.Notify.success(lang.createFormSuccessText);\n\n    resetForm();\n    navigate(\"/\");\n  } catch (error) {\n    Notiflix.Notify.failure(lang.createFormErrorText);\n\n  }\n};\n\n\n  return (\n    <EventForm\n      onSubmit={handleSubmit}\n      initialValues={initialValues}\n      btnText={lang.createFormBtnText}\n    />\n  );\n}\n\nexport default CreateForm;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectIsLoading } from \"../../redux/events/eventsSelectors\";\n\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport CreateForm from \"../../components/CreateForm/CreateForm\";\nimport Title from \"../../components/Title/Title\";\nimport Loader from \"../../components/Loader/Loader\";\n\nfunction CreatePage() {\n  const isLoading = useSelector(selectIsLoading);\n  const lang = useSelector((state) => state.events.lang);\n  return (\n    <>\n      <BackButton>{lang.backButtonText}</BackButton>\n      <Title>{lang.createPageTitle}</Title>\n      <CreateForm />\n      {isLoading && <Loader />}\n    </>\n  );\n}\n\nexport default CreatePage;\n"],"names":["dispatch","useDispatch","navigate","useNavigate","lang","useSelector","state","events","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref","resetForm","wrap","_context","prev","next","addEvent","Notiflix","success","createFormSuccessText","t0","failure","createFormErrorText","stop","_x","_x2","apply","arguments","_jsx","EventForm","onSubmit","initialValues","title","description","date","time","location","category","picture","priority","btnText","createFormBtnText","isLoading","selectIsLoading","_jsxs","_Fragment","children","BackButton","backButtonText","Title","createPageTitle","CreateForm","Loader"],"sourceRoot":""}